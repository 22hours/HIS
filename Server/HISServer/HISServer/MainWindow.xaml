<Window x:Class="HISServer.MainWindow"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Server" Height="450"  Width="800"
        WindowStyle="None"
        ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="SwitchTypeToggleButton"
       TargetType="{x:Type ToggleButton}">

            <Style.Resources>

                <Style x:Key="CheckRadioFocusVisual">

                    <Setter Property="Control.Template">

                        <Setter.Value>

                            <ControlTemplate>

                                <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>

                            </ControlTemplate>

                        </Setter.Value>

                    </Setter>

                </Style>

                <Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">

                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

                    <Setter Property="BorderThickness" Value="1"/>

                    <Setter Property="Cursor" Value="Hand" />

                    <Setter Property="Template">

                        <Setter.Value>

                            <ControlTemplate TargetType="{x:Type CheckBox}">

                                <ControlTemplate.Resources>

                                    <Storyboard x:Key="StoryboardIsChecked">

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">

                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>

                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>

                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>

                                    <Storyboard x:Key="StoryboardIsCheckedOff">

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">

                                            <EasingDoubleKeyFrame KeyTime="0" Value="14"/>

                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                                    <BulletDecorator.Bullet>
                                        <Border x:Name="ForegroundPanel" BorderThickness="1" Width="35" Height="20" CornerRadius="10">
                                            <Canvas>
                                                <Border Background="White" x:Name="CheckFlag" CornerRadius="10" VerticalAlignment="Center" BorderThickness="1" Width="19" Height="18" RenderTransformOrigin="0.5,0.5">

                                                    <Border.RenderTransform>

                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>

                                                            <RotateTransform/>

                                                            <TranslateTransform/>

                                                        </TransformGroup>

                                                    </Border.RenderTransform>

                                                    <Border.Effect>

                                                        <DropShadowEffect ShadowDepth="1" Direction="180" />

                                                    </Border.Effect>

                                                </Border>

                                            </Canvas>

                                        </Border>

                                    </BulletDecorator.Bullet>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                </BulletDecorator>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasContent" Value="true">
                                        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                        <Setter Property="Padding" Value="4,0,0,0"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource Accent}" />
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                            <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                                        </Trigger.EnterActions>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter TargetName="ForegroundPanel" Property="Background" Value="Gray" />
                                        <Trigger.EnterActions>
                                            <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                            <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>

                <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
                <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
                <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
                <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>

                <Style x:Key="ToggleButtonContentTextbox"
               TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                </Style>
                <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                         Color="{StaticResource Color.Additional.LightGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
                <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
                <TextBlock x:Key="OffContent"
                   Style="{StaticResource ToggleButtonContentTextbox}"
                   Text="Off" />
                <Style x:Key="OnContentControl"
               TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontFamily="Wingdings 2"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="White"
                                   Style="{StaticResource ToggleButtonContentTextbox}"
                                   Text="" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="OffContentControl"
               TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontSize="24"
                                   Foreground="White"
                                   Style="{StaticResource ToggleButtonContentTextbox}"
                                   Text="" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>

            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="MainRow">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="BackgroundEllipse1"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource ToggleButtonTrueBackground}" />
                                <Ellipse x:Name="BackgroundEllipse2"
                                 Grid.Row="0"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource ToggleButtonFalseBackground}" />
                                <Border x:Name="BackgroundBorder"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource ToggleButtonTrueBackground}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="AnimationWidth" />
                                    <ColumnDefinition Width="{Binding ElementName=MainRow,
                        Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="AnimationSizeBorder"
                                Grid.Column="0" />
                                <ContentControl Grid.Column="0"
                                        Style="{StaticResource OnContentControl}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=MainRow,
                Path=ActualHeight}" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <ContentControl Grid.Column="1"
                                        Style="{StaticResource OffContentControl}" />
                            </Grid>
                            <Grid Background="Transparent">
                                <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                    <Border Width="{Binding ElementName=AnimationSizeBorder,
                Path=ActualWidth}" />
                                    <Ellipse x:Name="ForegroundEllipse"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonTrueForeground}" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background"
                Value="{StaticResource ToggleButtonFalseBackground}" />
                                <Setter TargetName="ForegroundEllipse" Property="Fill"
                Value="{StaticResource ToggleButtonFalseForeground}" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName
                        ="AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        To="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>

                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName=
                        "AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        From="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>-->
                                <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="Black"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <StackPanel Background="#FFE6712E" Margin="0,0,0,405">
            <StackPanel Height="8"/>
            <TextBlock x:Name="textBlock" TextWrapping="Wrap" Height="38" Margin="0,0,303,0" Foreground="White" FontSize="20" FontFamily="Comic Sans MS"><Run Text="  22Hours 활자인쇄소"/><Run Text=" [ SERVER ]"/></TextBlock>
        </StackPanel>
        <StackPanel HorizontalAlignment="Left" Height="397" VerticalAlignment="Top" Width="184" Margin="0,45,0,0">
            <StackPanel Height="74">
                <TextBlock x:Name="userName" HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Top" Width="184" Text="SERVER." TextAlignment="Center"/>

                <TextBlock x:Name="serverStatus" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding server}" VerticalAlignment="Bottom" Height="26" Width="184" TextAlignment="Center"/>
                <StackPanel Height="29" Orientation="Horizontal">
                    <Button Content="SERVER RUN" Click="startServer" Background="#FFBBBDBA" BorderBrush="{x:Null}"/>
                    <Button Content="SERVER STOP" Click="stopServer" Background="#FFBBBDBA" BorderBrush="{x:Null}"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Height="322">
                <StackPanel Height="24">
                    <TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="CONNECTION LIST" Height="24" TextAlignment="Center" Background="#FFE6712E" Foreground="White"/>
                </StackPanel>
                <StackPanel Height="297">


                    <ListBox x:Name="CList" Height="212" ItemsSource="{Binding}" IsSynchronizedWithCurrentItem="True">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="{Binding id}" FontWeight="Bold" />
                                    <TextBlock Text=": " FontWeight="Bold" />
                                    <TextBlock Text="{Binding handle}" Width="auto" TextWrapping="Wrap" HorizontalAlignment="Stretch" />
                                    <Button x:Name="button1" Content="Kick" Width="75" Click="kickHim"/>
                                </WrapPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <StackPanel HorizontalAlignment="Left" Height="397" VerticalAlignment="Top" Width="608" Margin="184,45,0,0">
            <StackPanel x:Name="chatBox" Height="334" Orientation="Horizontal">
                <StackPanel Width="612">
                    <ListBox x:Name="RecieveBox" Height="330" BorderBrush="{x:Null}" ItemsSource="{Binding}" Margin="0,0,-304,0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="{Binding user}" FontWeight="Bold" />
                                    <TextBlock Text=": " FontWeight="Bold" />
                                    <TextBlock Text="{Binding text}" Width="auto" TextWrapping="Wrap" HorizontalAlignment="Stretch" />
                                </WrapPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                <StackPanel Width="304"/>
            </StackPanel>
            <StackPanel Height="62" Orientation="Horizontal">
                <StackPanel Height="61" Margin="0" Width="532" Orientation="Horizontal">
                    <StackPanel Height="64" Margin="0,0,0,-3" Width="10"/>
                    <StackPanel Width="521">
                        <StackPanel Height="4"/>
                        <StackPanel Height="50">
                            <TextBox Template="{StaticResource TextBoxBaseControlTemplate}"  x:Name="inputText" Height="50" TextWrapping="Wrap" Text="" HorizontalAlignment="Left" Width="511" TextAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <Button x:Name="button_Copy2"  Content="&gt;&gt;" HorizontalAlignment="Left" VerticalAlignment="Top" Width="50" Height="62" Foreground="#FF3887C8" BorderBrush="{x:Null}" Background="{x:Null}" FontWeight="Bold" FontSize="24" FontFamily="Impact"/>
            </StackPanel>
        </StackPanel>
        <Button x:Name="button" Content="ㅡ" HorizontalAlignment="Left" VerticalAlignment="Top" Width="59" Margin="606,4,0,0" Height="33" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}"/>
        <Button x:Name="button_Copy" Content="ㅁ" HorizontalAlignment="Left" VerticalAlignment="Top" Width="59" Margin="665,4,0,0" Height="33" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}"/>
        <Button x:Name="closeButton"  Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="59" Margin="724,4,0,0" Height="33" Foreground="White" BorderBrush="{x:Null}" Background="{x:Null}" Click="closeWindow"/>

    </Grid>

</Window>